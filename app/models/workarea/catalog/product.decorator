module Workarea
  decorate Catalog::Product, with: :product_bundles do
    decorated do
      include FeaturedProducts

      field :show_bundled_products, type: Boolean, default: true

      scope :bundles_containing, ->(id) { where('product_ids' => id) }
    end

    class_methods do
      # For all products that have the given SKU return an Array containing:
      # * the matching product
      # * the product bundles that contain the matching product
      #
      # @param sku [String]
      # @return [Array<Catalog::Product>]
      #
      def find_for_update_by_sku(sku)
        where('variants.sku' => sku).flat_map do |product|
          [product] + bundles_containing(product.id)
        end
      end
    end

    def bundle?
      product_ids.present?
    end

    def discrete_bundle?
      package? || family?
    end

    def package?
      bundle? && template == 'package'
    end

    def family?
      bundle? && template == 'family'
    end

    def kit?
      bundle? && variants.present? && variants.all? { |v| v.components.present? }
    end

    def active_by_relations?
      super || self.class.in(id: product_ids).any?(&:active?)
    end

    def purchasable?
      super && !discrete_bundle?
    end

    def missing_variant_details?
      variants.any? { |v| v.details.blank? }
    end

    def duplicate_variant_details?
      all_details = variants.map(&:details)
      all_details.size != all_details.uniq.size
    end
  end
end
