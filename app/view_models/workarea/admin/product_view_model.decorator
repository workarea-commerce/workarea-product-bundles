module Workarea
  decorate Admin::ProductViewModel, with: :product_bundles do
    decorated do
      include Admin::FeaturedProductsViewModel
    end

    def bundled_products
      @bundled_products ||=
        begin
          models = Catalog::Product.find_ordered_for_display(
            model.product_ids
          )
          Admin::ProductViewModel.wrap(models)
        end
    end

    def bundled_product_sku_options
      bundled_products.flat_map do |product|
        product.variants.map do |variant|
          [
            [
              variant.sku,
              variant.details.flat_map { |k, v| "#{k}: #{v.to_sentence}" }
            ].join(' '),
            variant.sku,
            data: { variant_component_option: product.id }
          ]
        end
      end
    end

    def bundle_templates
      Workarea.config.product_bundle_templates
        .map(&:to_s)
        .map do |template_name|
          [template_name.titleize, template_name.optionize]
        end
    end

    def templates
      return super unless model.present? # why??

      if discrete_bundle?
        bundle_templates
      else
        super.reject { |o| o.in?(bundle_templates) }
      end
    end
  end
end
